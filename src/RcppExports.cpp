// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// regression_GD_path
Rcpp::List regression_GD_path(arma::mat X, arma::vec Y, double t_max, double alpha_init);
RcppExport SEXP _l2path_regression_GD_path(SEXP XSEXP, SEXP YSEXP, SEXP t_maxSEXP, SEXP alpha_initSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< double >::type t_max(t_maxSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_init(alpha_initSEXP);
    rcpp_result_gen = Rcpp::wrap(regression_GD_path(X, Y, t_max, alpha_init));
    return rcpp_result_gen;
END_RCPP
}
// regression_Newton_path_low_dimension_vary
Rcpp::List regression_Newton_path_low_dimension_vary(arma::mat X, arma::vec Y, double t_max, double alpha_init);
RcppExport SEXP _l2path_regression_Newton_path_low_dimension_vary(SEXP XSEXP, SEXP YSEXP, SEXP t_maxSEXP, SEXP alpha_initSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< double >::type t_max(t_maxSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_init(alpha_initSEXP);
    rcpp_result_gen = Rcpp::wrap(regression_Newton_path_low_dimension_vary(X, Y, t_max, alpha_init));
    return rcpp_result_gen;
END_RCPP
}
// regression_Newton_path_high_dimension_vary
Rcpp::List regression_Newton_path_high_dimension_vary(arma::mat X, arma::vec Y, double t_max, double alpha_init);
RcppExport SEXP _l2path_regression_Newton_path_high_dimension_vary(SEXP XSEXP, SEXP YSEXP, SEXP t_maxSEXP, SEXP alpha_initSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< double >::type t_max(t_maxSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_init(alpha_initSEXP);
    rcpp_result_gen = Rcpp::wrap(regression_Newton_path_high_dimension_vary(X, Y, t_max, alpha_init));
    return rcpp_result_gen;
END_RCPP
}
// logistic_GD_path
Rcpp::List logistic_GD_path(arma::mat X, arma::vec Y, double t_max, double alpha_init);
RcppExport SEXP _l2path_logistic_GD_path(SEXP XSEXP, SEXP YSEXP, SEXP t_maxSEXP, SEXP alpha_initSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< double >::type t_max(t_maxSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_init(alpha_initSEXP);
    rcpp_result_gen = Rcpp::wrap(logistic_GD_path(X, Y, t_max, alpha_init));
    return rcpp_result_gen;
END_RCPP
}
// logistic_Newton_path_low_dimension_vary
Rcpp::List logistic_Newton_path_low_dimension_vary(arma::mat X, arma::vec Y, double t_max, double alpha_init);
RcppExport SEXP _l2path_logistic_Newton_path_low_dimension_vary(SEXP XSEXP, SEXP YSEXP, SEXP t_maxSEXP, SEXP alpha_initSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< double >::type t_max(t_maxSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_init(alpha_initSEXP);
    rcpp_result_gen = Rcpp::wrap(logistic_Newton_path_low_dimension_vary(X, Y, t_max, alpha_init));
    return rcpp_result_gen;
END_RCPP
}
// logistic_Newton_path_high_dimension_vary
Rcpp::List logistic_Newton_path_high_dimension_vary(arma::mat X, arma::vec Y, double t_max, double alpha_init);
RcppExport SEXP _l2path_logistic_Newton_path_high_dimension_vary(SEXP XSEXP, SEXP YSEXP, SEXP t_maxSEXP, SEXP alpha_initSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< double >::type t_max(t_maxSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_init(alpha_initSEXP);
    rcpp_result_gen = Rcpp::wrap(logistic_Newton_path_high_dimension_vary(X, Y, t_max, alpha_init));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_l2path_regression_GD_path", (DL_FUNC) &_l2path_regression_GD_path, 4},
    {"_l2path_regression_Newton_path_low_dimension_vary", (DL_FUNC) &_l2path_regression_Newton_path_low_dimension_vary, 4},
    {"_l2path_regression_Newton_path_high_dimension_vary", (DL_FUNC) &_l2path_regression_Newton_path_high_dimension_vary, 4},
    {"_l2path_logistic_GD_path", (DL_FUNC) &_l2path_logistic_GD_path, 4},
    {"_l2path_logistic_Newton_path_low_dimension_vary", (DL_FUNC) &_l2path_logistic_Newton_path_low_dimension_vary, 4},
    {"_l2path_logistic_Newton_path_high_dimension_vary", (DL_FUNC) &_l2path_logistic_Newton_path_high_dimension_vary, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_l2path(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
