% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/l2main.R
\name{l2main}
\alias{l2main}
\title{Path-following algorithm for computing L2 regularized solution path}
\usage{
l2main(X, Y, t_max, alpha_init, class = "square", method = "Newton_low")
}
\arguments{
\item{X}{A \eqn{n \times p} feature matrix.}

\item{Y}{A \eqn{n \times 1} response vector when class = "square", and a \eqn{n \times 1} binary vector when class = "logistic".}

\item{t_max}{Range of solution path \eqn{[0, t_{\max}]}.}

\item{alpha_init}{Initial step size specified to start the iteration.}

\item{class}{Specify the problem class with default value "square". Use "square" when considering ridge regression solution path, and "logistic" for \eqn{\ell_2} regularized logistic regression.}

\item{method}{Specify the method for computing the solution path. Default is "Newton_low". Use "GD" for gradient descent, "Newton_low" for Newton method in low dimensional case (\eqn{n >= p}) and "Newton_high" for Newton method in low dimensional case (\eqn{n < p}).}
}
\value{
theta: Generated solution path

alpha_t_vec: Adaptively chosen step size

t_vec: Adaptively selected grid points

n_vec: Number of gradient steps at each selected grid point. Applicable only if method =  "GD".
}
\description{
Compute \eqn{\ell_2} regularized solution path by using path-following algorithms.
Grid points are adaptively selected to save computation while maintaining the high accuracy of the whole path.
Current version only supports ridge regression (class = "square", default) and \eqn{\ell_2} regularized logistic regression (class = "logistic").
For both classes of problems, the method for computing solution path can be gradient descent (method = "GD), Newton method in low dimensional case (\eqn{n >= p}, method = "Newton_low")
and Newton method in high dimensional case (\eqn{n < p}, method = "Newton_high").
}
